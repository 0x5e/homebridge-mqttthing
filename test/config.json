{
  "bridge": {
    "name": "Homebridge",
    "username": "DD:7C:A6:26:A7:69",
    "port": 55555,
    "pin": "123-45-678"
  },
  "description": "This is an example configuration file. You can use this as a template for creating your own configuration file.",
  "platforms": [],
  "accessories": [
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test lightbulb",
      "url": "http://192.168.10.35:1883",
      "mqttPubOptions": { "retain": false },
      "topics": {
        "getOn": "test/lightbulb/getOn",
        "setOn": "test/lightbulb/setOn",
        "getBrightness": {
          "topic": "test/lightbulb/getBrightness",
          "apply": "return Math.round( message / 2.55 );"
        },
        "setBrightness": {
          "topic": "test/lightbulb/setBrightness",
          "apply": "return Math.round( message * 2.55 );"
        },
        "getHue": "test/lightbulb/getHue",
        "setHue": "test/lightbulb/setHue",
        "getSaturation": "test/lightbulb/getSaturation",
        "setSaturation": "test/lightbulb/setSaturation",
        "getOnline": "test/lightbulb/getOnline"
      },
      "logMqtt": true,
      "integerValue": true,
      "onlineValue": "Online",
      "startPub": {
        "test/lightbulb/setOn": "1",
        "test/lightbulb/getOn": "1",
        "test/lightbulb/setBrightness": "200",
        "test/lightbulb/getBrightness": "200",
        "test/lightbulb": "Hello world"
      }
    },
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test HSV Light",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getHSV": "test/hsvlight/getHSV",
        "setHSV": "test/hsvlight/setHSV"
      },
      "logMqtt": true
    },
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test espurna Light",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getHSV": "test/hsvlight2/hsv",
        "setHSV": "test/hsvlight2/hsv/set",
        "getOn": "test/hsvlight2/on",
        "setOn": "test/hsvlight2/on/set"
      },
      "logMqtt": true,
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test RGB Light",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getRGB": "test/rgblight/rgb",
        "setRGB": "test/rgblight/rgb/set",
        "getOn": "test/rgblight/on",
        "setOn": "test/rgblight/on/set"
      },
      "logMqtt": true,
      "integerValue": true,
      "hex": true
    },
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test RGBW Light",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getRGBW": "test/rgbwlight/rgb",
        "setRGBW": "test/rgbwlight/rgb/set",
        "getOn": "test/rgbwlight/on",
        "setOn": "test/rgbwlight/on/set"
      },
      "logMqtt": true,
      "integerValue": true,
      "hexPrefix": "#"
    },
    {
      "accessory": "mqttthing",
      "type": "lightbulb",
      "name": "Test RGBW Light 2",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getRGB": "test/rgbwlight2/rgb",
        "setRGB": "test/rgbwlight2/rgb/set",
        "getWhite": "test/rgbwlight2/white",
        "setWhite": "test/rgbwlight2/white/set",
        "getOn": "test/rgbwlight2/on",
        "setOn": "test/rgbwlight2/on/set"
      },
      "logMqtt": true,
      "integerValue": true,
      "hexPrefix": "#"
    },
    {
      "accessory": "mqttthing",
      "type": "switch",
      "name": "Test switch",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getOn": "test/switch/getOn",
        "setOn": "test/switch/setOn"
      },
      "integerValue": true,
      "turnOffAfterms": 2000
    },
    {
      "accessory": "mqttthing",
      "type": "outlet",
      "name": "Test outlet",
      "url": "http://192.168.10.35:1883",
      "mqttPubOptions": { "retain": true },
      "topics": {
        "getOn": "test/outlet/getOn",
        "setOn": "test/outlet/setOn",
        "getInUse": "test/outlet/getInUse"
      },
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "motionSensor",
      "name": "Test motion sensor",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getMotionDetected": "test/motion/detected",
        "getStatusActive": "test/motion/active",
        "getStatusFault": "test/motion/fault",
        "getStatusTampered": "test/motion/tampered",
        "getStatusLowBattery": "test/motion/lowBattery",
        "getBatteryLevel": "test/motion/batteryLevel",
        "getChargingState": "test/motion/chargingState"
      },
      "integerValue": true,
      "chargingStateValues": [ "NotCharging", "Charging", "NotChargeable" ],
      "logMqtt": true,
      "turnOffAfterms": 3000
    },
    {
      "accessory": "mqttthing",
      "type": "occupancySensor",
      "name": "Test occupancy sensor",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getOccupancyDetected": "test/occupancy/detected",
        "getStatusActive": "test/occupancy/active",
        "getStatusFault": "test/occupancy/fault",
        "getStatusTampered": "test/occupancy/tampered",
        "getStatusLowBattery": "test/occupancy/lowBattery"
      },
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "lightSensor",
      "name": "Test light sensor",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "getCurrentAmbientLightLevel": "test/light/level"
      }
    },
    {
      "accessory": "mqttthing",
      "type": "temperatureSensor",
      "name": "Test temperature sensor",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getCurrentTemperature": "test/temperature"
      }
    },
    {
      "accessory": "mqttthing",
      "type": "humiditySensor",
      "name": "Test humidity sensor",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getCurrentRelativeHumidity": "test/humidity"
      }
    },
    {
      "accessory": "mqttthing",
      "type": "contactSensor",
      "name": "Test contact sensor",
      "url": "http://192.168.10.35:1883",
      "topics": {
        "getContactSensorState": "test/contact/state"
      },
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "doorbell",
      "name": "Test doorbell",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "getSwitch": "test/doorbell/ring",
        "getMotionDetected": "test/doorbell/motion/detected",
        "setVolume": "test/doorbell/volume",
        "setBrightness": "test/doorbell/brightness"
      },
      "switchValues": [ "SINGLE", "DOUBLE", "LONG" ],
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "securitySystem",
      "name": "Test Security System",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "setTargetState": "test/security/target",
        "getTargetState": "test/security/current",
        "getCurrentState": "test/security/current"
      },
      "targetStateValues": [ "StayArm", "AwayArm", "NightArm", "Disarmed" ],
      "currentStateValues": [ "StayArm", "AwayArm", "NightArm", "Disarmed", "Triggered" ]
    },
    {
      "accessory": "mqttthing",
      "type": "smokeSensor",
      "name": "Test smoke sensor",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "getSmokeDetected": "test/smoke/detected"
      },
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "leakSensor",
      "name": "Test leak sensor",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "getLeakDetected": "test/leak/detected"
      },
      "integerValue": true
    },
    {
      "accessory": "mqttthing",
      "type": "statelessProgrammableSwitch",
      "name": "Test Stateless Programmable Switch",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics": {
        "getSwitch": "test/spswitch/state"
      }
    },
    {
      "accessory": "mqttthing",
      "type": "garageDoorOpener",
      "name": "Test Garage Door",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics":
      {
          "setTargetDoorState":       "test/garage/target",
          "getTargetDoorState":       "test/garage/current",
          "getCurrentDoorState":      "test/garage/current",
          "setLockTargetState":       "test/garagelock/target",
          "getLockTargetState":       "test/garagelock/current",
          "getLockCurrentState":      "test/garagelock/current",
          "getObstructionDetected":   "test/garage/obstruction"
      },
      "doorValues": [ "Open", "Closed", "Opening", "Closing", "Stopped" ],
      "lockValues": [ "Unsecured", "Secured", "Jammed",  "Unknown" ]
    },
    {
      "accessory": "mqttthing",
      "type": "fan",
      "name": "Test Fan",
      "url": "http://192.168.10.35:1883",
      "logMqtt": true,
      "topics":
      {
        "getOn": "test/fan/getOn",
        "setOn": "test/fan/setOn",
        "getRotationDirection": "test/fan/getRotationDirection",
        "setRotationDirection": "test/fan/setRotationDirection",
        "getRotationSpeed": "test/fan/getRotationSpeed",
        "setRotationSpeed": "test/fan/setRotationSpeed"
      },
      "integerValue": true
    }
  ]
}
